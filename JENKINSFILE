pipeline {
    agent { label 'Agente1' }

    stages {
        stage('Get Code') {
            steps {
                bat 'whoami'
                bat 'hostname'
                echo env.WORKSPACE
                
                git 'https://github.com/GGWPDirecto/Caso-practico-1.git'
                stash name: 'source-code', includes: '**/*'
            }
        }

        stage('Unit Test') {
            steps {
                unstash 'source-code'
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    pytest --junitxml=result-unit.xml test\\unit
                '''
                stash name: 'unit-results', includes: 'result-unit.xml'
                junit 'result-unit.xml'
            }
        }

        stage('Static Analysis') {
            steps {
                unstash 'source-code'
                bat '''
                    set PYTHONPATH=%WORKSPACE%
                    flake8 app/ > flake8-report.txt
                '''
                bat 'dir flake8-report.txt'
                bat 'type flake8-report.txt'

                script {
                    def warnings = readFile('flake8-report.txt').split('\n').size()
                    if (warnings >= 10) {
                        currentBuild.result = 'FAILURE'  // Se marca como unhealthy (rojo)
                    } else if (warnings >= 8) {
                        currentBuild.result = 'UNSTABLE' // Se marca como unstable (naranja)
                    }
                }

                archiveArtifacts artifacts: 'flake8-report.txt', fingerprint: true
            }
        }

        stage('Integration Test (Rest)') {
            steps {
                unstash 'source-code'
                bat '''
                    set FLASK_APP=app\\api.py
                    set FLASK_ENV=development
                    start /B flask run
                    timeout /T 5
                    start /B java -jar C:\\WireMock\\wiremock-standalone-3.13.0.jar --port 9090 --root-dir C:\\WireMock
